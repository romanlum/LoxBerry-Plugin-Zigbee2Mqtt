on:
  release:
    # Only use the types keyword to narrow down the activity types that will trigger your workflow.
    types: [prereleased]

name: Add artifacts to release

jobs:
  publish_release:
    name: Publish prerelease
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: update prerelease.cfg
        env:
          VERSION: ${{ steps.get_release.outputs.tag_name }}
        run: |
          cp resources/prerelease.cfg prerelease.cfg
          sed -i "s/__VERSION__/$VERSION/g" prerelease.cfg
      - name: push prerelease.cfg
        uses: github-actions-x/commit@v2.9
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-branch: "master"
          commit-message: "Release version ${{ github.ref }}"
          force-add: "true"
          files: prerelease.cfg
          name: release-bot
          email: release-bot@lumetsnet.at
  add_artifacts:
    name: Add artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Install php dependencies
        uses: php-actions/composer@v6
        id: composer
        with:
          working_dir: "webfrontend/htmlauth/include"
      - name: Update plugin.cfg file
        env:
          VERSION: ${{ steps.get_release.outputs.tag_name }}
        run: |
          echo $GITHUB_REF
          sed -i "s/__VERSION__/$VERSION/g" plugin.cfg
      - name: update prerelease.cfg
        env:
          VERSION: ${{ steps.get_release.outputs.tag_name }}
        run: |
          cp resources/prerelease.cfg prerelease.cfg
          sed -i "s/__VERSION__/$VERSION/g" prerelease.cfg
      - name: remove not needed folders
        run: |
          rm .git -r -f
          rm .github -r -f
      - uses: papeloto/action-zip@v1
        with:
          files: .
          dest: plugin.zip
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./plugin.zip
          asset_name: plugin.zip
          asset_content_type: application/zip
